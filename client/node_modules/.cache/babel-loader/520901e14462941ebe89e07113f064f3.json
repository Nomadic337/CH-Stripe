{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './RootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './RootSaga';\nconst sagaMiddleware = createSagaMiddleware();\nconst middleWares = [sagaMiddleware]; // Logger for testing\n\nif (process.env.NODE_ENV === 'development') {\n  middleWares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistStore\n};","map":{"version":3,"sources":["/Users/wolflaleau/Desktop/React/React/Projects/CH-Stripe/client/src/Redux/Store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","createSagaMiddleware","rootSaga","sagaMiddleware","middleWares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB,C,CAEA;;AACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AACxCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAED,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGO,WAAJ,CAA7B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,QAAnB;AAEA,OAAO,MAAMS,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAEP,eAAe;AAAEA,EAAAA,KAAF;AAASX,EAAAA;AAAT,CAAf","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './RootReducer';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './RootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleWares = [sagaMiddleware];\n\n// Logger for testing\nif (process.env.NODE_ENV === 'development') {\n    middleWares.push(logger)\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middleWares));\n\nsagaMiddleware.run(rootSaga);\n\nexport const persistor = persistStore(store);\n\nexport default { store, persistStore };\n"]},"metadata":{},"sourceType":"module"}