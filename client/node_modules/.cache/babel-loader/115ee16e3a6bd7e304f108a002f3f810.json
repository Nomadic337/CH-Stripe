{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], collections => collections ? collections[collectionUrlParam] : null)); // transform collection objects into arrays\n\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/wolflaleau/Desktop/React/React/Projects/CH-Stripe/client/src/Redux/Shop/ShopSelector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionsLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC3C,CAACE,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,gBAAgB,GAAGN,OAAO,CAACO,kBAAkB,IACtDR,cAAc,CACd,CAACK,iBAAD,CADc,EAEdC,WAAW,IAAKA,WAAW,GAAGA,WAAW,CAACE,kBAAD,CAAd,GAAqC,IAFlD,CADqB,CAAhC,C,CAOP;;AACA,OAAO,MAAMC,2BAA2B,GAAGT,cAAc,CACrD,CAACK,iBAAD,CADqD,EAErDC,WAAW,IACPA,WAAW,GAAGI,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA6BC,GAAG,IAAIP,WAAW,CAACO,GAAD,CAA/C,CAAH,GAA2D,EAHrB,CAAlD;AAMP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACpD,CAACE,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACnD,CAACE,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAFoC,CAAhD","sourcesContent":["import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector(\n    [selectShop],\n    shop => shop.collections\n)\n\nexport const selectCollection = memoize(collectionUrlParam => \n    createSelector(\n    [selectCollections],\n    collections => (collections ? collections[collectionUrlParam] : null)\n    )\n)\n\n// transform collection objects into arrays\nexport const selectCollectionsForPreview = createSelector(\n    [selectCollections],\n    collections => \n        collections ? Object.keys(collections).map(key => collections[key]) : []\n)\n\nexport const selectIsCollectionFetching = createSelector(\n    [selectShop],\n    shop => shop.isFetching\n)\n\nexport const selectIsCollectionsLoaded = createSelector(\n    [selectShop],\n    shop => !!shop.collections\n)\n"]},"metadata":{},"sourceType":"module"}